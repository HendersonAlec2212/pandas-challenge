unique_item_count = 

purchase_data_df.dropna(subset = root_column_list, inplace=True)
purchase_data_df.count()

# MARKDOWN - Purchasing Analysis (Total)
# Number of Unique Items
# Average Purchase Price
# Total Number of Purchases
# Total Revenue


### Number of Unique Items
unique_item_num = int(len(pd.unique(purchase_data_df['Item ID'])))



purchase_analysis = {
    'Number of Unique Items': [unique_item_num],
    'Average Price': [],
    'Number of Purchases': [],
    'Total Revenue': [],
}

purchase_analysis_df = pd.DataFrame(purchase_analysis)
purchase_analysis_df



print(unique_item_num)
test_list_len = len(purchase_analysis.get())
----------------------------------------------------------------------------------------------
male_count = purchase_data_df.loc[purchase_data_df['Gender'] == 'Male'].count()


# gender_values = purchase_data_df['Gender'].value_counts().keys.tolist()
# gender_counts = purchase_data_df['Gender'].value_counts().tolist()
# gender_dict = dict(zip(gender_values, gender_counts))


---------------------------------------------------------------
x = age_range_df.value_counts()

avg_purchase_per_age_range = age_purchase_total / x


------------------------------------
retest_df = test_df.drop_duplicates()
retest_df['Age Ranges'].value_counts()

------------------------------------------------
# GO BACK THROUGH ACTIVITIES 4.3 TO SEE ABOUT THE FORMATTING CHANGES USED TO MAKE THE CHART 
# IN THE HOMEWORK .IPYNB

# grab the age info binned from above
purchase_data_df['Age Ranges'] = pd.cut(purchase_data_df['Age'], age_bin, labels=group_names)

age_range_df = pd.cut(purchase_data_df['Age'], age_bin, labels=group_names)

# gather data as above with Gender Demographics except we are comparing the amounts spent vs the Age Ranges of the root data frame
age_range_totals = purchase_data_df.groupby(['Age Ranges']).count()['Price'].rename('Purchase Count')
age_avg_purchase = purchase_data_df.groupby(['Age Ranges']).mean()['Price'].rename('Average Purchase Price')
age_purchase_total = purchase_data_df.groupby(['Age Ranges']).sum()['Price'].rename('Total Purchase Value')

# isolate the Age Range & SN
SN_age_range_df = purchase_data_df[['Age Ranges', 'SN']]

#remove duplicates so we have per person data, not per transaction data --> (age_range_totals)
unique_SN_age_range_df = SN_age_range_df.drop_duplicates()

#obtain the counts to use in arithmatic
unique_SN_age_range = unique_SN_age_range_df['Age Ranges'].value_counts()

# execute arithmatic and solve for average purchase per unique user in age range
avg_purchase_per_age_range = age_purchase_total / unique_SN_age_range

age_analysis_df = pd.DataFrame({
    'Purchase Count': age_range_totals,
    'Average Purchase Price': age_avg_purchase,
    'Total Purchase Value': age_purchase_total,
    'Avg Total Purchase per Person': avg_purchase_per_age_range
})
age_analysis_df

--------------------------------------------

_df[''] = _df[''].map('${:,.2f}'.format)


-----------------------------------